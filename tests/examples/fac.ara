
routine main() -> (result: Int) {
    (result) := call fac(3)
}

routine fac(n: Int) -> (result: Int) {
    result := 1
    -> Entry

    <- Entry, Loop (result == 1)
        (result, n) := call multiply (result, n)

        n := n - (1 + 0)
    -> Exit, Loop (n == 0)

    <- Exit
    0 := n
}

routine multiply(n: Int, multiplier: Int) -> (n: Int, multiplier: Int) {
    tmp := 0 ^ (n * multiplier)
    (n, tmp) := call swap (n, tmp)
    0 := tmp ^ (n / multiplier)
}

routine swap(a: Int, b: Int) -> (b, a) { }
